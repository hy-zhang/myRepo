package expDemo4;

import trees.ExpAlg;

/*Using our framework (that is generic queries and transformations are automatically generated). 
 * You just need to implement freeVars as a query and substVars 
 * as a transformation using the classes generated by the framework.
 * 
 */
public class ExpTest {

	static <Exp> Exp genExp(ExpAlg<Exp> alg) {
		return alg.Add(alg.Add(alg.Lit(2), alg.Var("var1")),alg.Add(alg.Add(alg.Var("var2"), alg.Var("var3")), alg.Lit(5)));
	}
	
	static ExpAlg<String[]> genSubst(ExpAlg<String[]> alg) {
		SubstVarsTransform subst = new SubstVarsTransform(alg, "var1", "var4");
		for (int i = 0; i < 3; i++)
			subst = new SubstVarsTransform(subst, "var1", "var4");
		return subst;
	}
	
	static ExpAlg<Integer> genLitInc(ExpAlg<Integer> alg) {
		LitIncreaseTransform subst = new LitIncreaseTransform(alg);
		for (int i = 0; i < 2; i++)
			subst = new LitIncreaseTransform(subst);
		return subst;
	}
	
	public static void main(String[] args) {
		
		FreeVarsQueryExpAlg sQuery = new FreeVarsQueryExpAlg(new FreeVarsMonoid());
		LitQueryExpAlg iQuery = new LitQueryExpAlg(new LitMonoid());
		
		String[] strRes = genExp(genSubst(sQuery));
		for (String s: strRes) System.out.println(s);
		
		Integer intRes = genExp(genLitInc(iQuery));
		System.out.println("Total Value: " + intRes);
		
	}

}
